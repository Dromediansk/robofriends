{"version":3,"sources":["actions.js","api/api.js","constants.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/Header.js","components/MainPage.js","containers/App.js","registerServiceWorker.js","reducers.js","index.js"],"names":["requestRobots","dispatch","link","type","fetch","then","response","json","data","payload","catch","error","Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","style","borderRadius","outline","textAlign","aria-label","placeholder","onChange","Scroll","props","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","info","setState","Component","Header","nextProps","nextState","MainPage","filterRobots","filter","robot","toLowerCase","includes","searchField","onRequestRobots","_this$props","onSearchChange","isPending","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","App","src_components_MainPage","connect","searchRobots","event","target","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","intialStateSearch","intialStateRobots","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fe422611.chunk.js","sourcesContent":["import { apiCall } from './api/api'\r\nimport {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants.js';\r\n\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING })\r\n\tapiCall('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n\t\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const apiCall = (link) =>\r\n    fetch(link).then(response => response.json())","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\r\n\r\nconst Card = ({ name, email, id}) => {\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tid={robots[i].id}\r\n\t\t\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tborderRadius: '15px',\r\n\t\t\t\t\toutline: 'none',\r\n\t\t\t\t\ttextAlign: 'center'\r\n\t\t\t\t}}\r\n\t\t\t\taria-label='Search Robots'\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tonChange={ searchChange }\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style = {{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidCatch(error, info) {\r\n\tthis.setState({ hasError: true })\r\n}\r\n\r\nrender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Ooooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <h1 className='f1'>RoboFriends</h1>\r\n\t}\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport Header from '../components/Header';\r\nimport './MainPage.css';\r\n\r\nclass MainPage extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestRobots();\r\n\t}\r\n\r\n    filterRobots = () => {\r\n        return this.props.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.props.searchField.toLowerCase());\r\n\t\t})\r\n    }\r\n\trender() {\r\n\t\tconst { onSearchChange, isPending } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<SearchBox searchChange={onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n                    { isPending ? <h1>Loading</h1> :\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList robots={this.filterRobots()}/>\r\n\t\t\t\t\t</ErrorBoundry>\r\n                }\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport MainPage from '../components/MainPage';\r\n\r\nimport './App.css';\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn <MainPage { ...this.props } />\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants.js';\r\n\r\nconst intialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=intialStateSearch, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst intialStateRobots = {\r\n\tisPending: false,\r\n\trobots: [],\r\n\terror: ''\r\n}\r\n\r\nexport const requestRobots = (state=intialStateRobots, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, { isPending: true })\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, { robots: action.payload, isPending: false })\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, { error: action.payload, isPending: false })\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger'; //logging state\nimport thunkMiddleware from 'redux-thunk'; //handles asynchronous actions\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}